services:
  # This is the main service for the web application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: apidoxy-web-app:prod
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    environment:
      - PORT=3000
      - NODE_ENV=production
      - REDIS_URL=redis://:secure_password@redis:6379
      - REDIS_PASSWORD=secure_password
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    # deploy:
    #   resources:
    #     limits:
    #       memory: 512M
    #       cpus: '1'
    #     reservations:
    #       memory: 256M
    #       cpus: '0.5'
    # security_opt:
    #   - no-new-privileges:true
    # read_only: true 
    # tmpfs:
    #   - /tmp
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "5"

  redis:
    image: redis:8.0.2-alpine
    container_name: prod-redis

    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server --requirepass secure_password --save 60 1 --databases 6
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "secure_password", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    # deploy:
    #   resources:
    #     limits:
    #       memory: 256M
    #       cpus: '0.5'
    # security_opt:
    #   - no-new-privileges:true
    # read_only: true
    # tmpfs:
    #   - /tmp
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"
  
  nginx:
    image: nginx:1.29.1-alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf/live/localhost:/etc/letsencrypt/live/localhost:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - app-network
    restart: unless-stopped
    # deploy:
    #   resources:
    #     limits:
    #       memory: 128M
    #       cpus: '0.25'
    # security_opt:
    #   - no-new-privileges:true
    # read_only: true
    # tmpfs:
    #   - /tmp
    #   - /var/cache/nginx
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "5"

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d
    entrypoint: /bin/sh
    networks:
      - app-network

volumes:
  redis_data:
  certbot-etc:
  certbot-var:

networks:
  app-network:
    driver: bridge
